networks:
  local:
    name: local
    driver: bridge

x-logging-limits:
  &default-limits
  resources:
    reservations:
      cpus: '0.0001'
      memory: 32M
    limits:
      cpus: '1'
      memory: 128M

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    # tag: "{{.Name}}"

services:
  mongo:
    image: mongo:8.0.4
    container_name: mongo
    restart: on-failure:5
    labels:
      logging: "promtail"
    environment:
      MONGO_INITDB_DATABASE: test
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: test

    volumes:
      - ./configs/mongo/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/:ro
    networks:
      - local
    ports:
      - "27017:27017"
    deploy:
      resources:
        reservations:
          cpus: '0.1'
          memory: 128M
        limits:
          cpus: '2'
          memory: 512M

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_ADMINUSERNAME: test
      ME_CONFIG_MONGODB_ADMINPASSWORD: test
      ME_CONFIG_MONGODB_URL: mongodb://test:test@mongo:27017/
    networks:
      - local
    ports:
      - "8081:8081"
    deploy:
      resources:
        reservations:
          cpus: '0.01'
          memory: 32M
        limits:
          cpus: '1'
          memory: 256M

  grafana:
    image: grafana/grafana:11.5.1
    container_name: grafana
    user: "${UID:-501}"
    environment:
      - GF_USERS_DEFAULT_THEME=dark
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    depends_on:
      - tempo
    volumes:
      - ./configs/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
      - ./configs/grafana/data/:/var/lib/grafana/:rw
    networks:
      - local
    ports:
      - "3000:3000"
    deploy: *default-limits
    logging: *default-logging

  promtail:
    image:  grafana/promtail:3.3.2
    container_name: promtail
    command: --config.file=/etc/promtail/promtail.yaml
    privileged: true
    user: "${UID:-501}"
    depends_on:
      - loki
    volumes:
      - ./configs/promtail/promtail.yaml:/etc/promtail/promtail.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/var/log
    networks:
      - local
    deploy: *default-limits
    logging: *default-logging

  tempo:
    image: grafana/tempo:2.7.0
    container_name: tempo
    command: --config.file=/etc/tempo/tempo-local.yaml
    volumes:
      - ./configs/tempo/tempo-local.yaml:/etc/tempo/tempo-local.yaml
    networks:
      - local
    ports:
      - "4317:4317"   # otlp grpc
      - "4318:4318"   # otlp http
      - "3200:3200"   # tempo http
      - "9095:9095"   # tempo grpc
      - "14268:14268" # jaeger ingest
    deploy: *default-limits
    logging: *default-logging

  loki:
    image: grafana/loki:3.3.2
    container_name: loki
    command: --config.file=/etc/loki/loki.yaml
    networks:
      - local
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki/loki.yaml:/etc/loki/loki.yaml
    deploy: *default-limits
    logging: *default-logging

  prometheus:
    image: prom/prometheus:v2.51.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./configs/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - local
    ports:
      - "9090:9090"
    depends_on:
      - pushgateway
    deploy: *default-limits
    logging: *default-logging

  pushgateway:
    image: prom/pushgateway:v1.11.0
    container_name: pushgateway
    restart: unless-stopped
    command:
      - '--web.listen-address=:9191'
      - '--push.disable-consistency-check'
      - '--persistence.interval=5m'
    ports:
      - "9191:9191"
    deploy: *default-limits
    logging: *default-logging

#  mimir:
#    image: grafana/mimir:2.14.3
#    container_name: mimir
#    restart: unless-stopped
#    ports:
#      - "9090:9090"
#    command: --config.file=/etc/mimir.yaml
#    volumes:
#      - ./configs/mimir/mimir.yaml:/etc/mimir.yaml
#      - ./configs/mimir/alertmanager.yaml:/etc/alertmanager-fallback-config.yaml
#    deploy: *default-limits
#    logging: *default-logging